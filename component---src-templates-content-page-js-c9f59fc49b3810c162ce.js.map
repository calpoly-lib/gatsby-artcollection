{"version":3,"sources":["webpack:///./src/components/list-posts.js","webpack:///./src/components/partial.js","webpack:///./src/components/collections.js","webpack:///./src/components/artists.js","webpack:///./src/components/types.js","webpack:///./src/components/media.js","webpack:///./src/templates/content-page.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js"],"names":["list_posts","react_default","a","createElement","gatsby_browser_entry","StaticQuery","query","render","data","Fragment","JSON","stringify","allPosts","edges","_2570227127","partial","_ref","slug","renderAst","rehype_react_default","components","Compiler","allPartials","find","item","node","fields","htmlAst","_2295152031","listItems","allCategories","group","map","collection","key","fieldValue","Link","to","kebabCase_default","totalCount","_2323394661","artist","_1907962809","type","_1142233095","medium","_849757726","post","markdownRemark","g-link","ac-list-posts","ac-partial","ac-collections","collections","ac-artists","artists","ac-types","types","ac-media","media","layout","frontmatter","title","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","props","Consumer","staticQueryData","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","c","204","e","site","siteMetadata","205","t","n","207","r","u","o","l","i","f","header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","layout_Layout","Helmet_default","meta","name","content","paddingTop","_755544856","prop_types_default","s","231","kebabCase","result","word","index","toLowerCase","Symbol","baseToString","value","arrayReduce","deburr","words","reApos","RegExp","callback","replace","399","array","iteratee","accumulator","initAccum","length","deburrLetter","toString","reLatin","reComboMark","401","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","call","freeGlobal","freeSelf","self","Object","root","Function","global","Array","baseGetTag","isObjectLike","symbolTag","getRawTag","objectToString","symToStringTag","toStringTag","objectProto","hasOwnProperty","nativeObjectToString","isOwn","tag","unmasked","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","match","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord"],"mappings":"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","file":"component---src-templates-content-page-js-c9f59fc49b3810c162ce.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\n// import PostLink from \"../components/post-link\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      {\r\n        allPosts: allMarkdownRemark(\r\n          filter: { fileAbsolutePath: { regex: \"/content\\/posts/\" } }\r\n          sort: { order: DESC, fields: [frontmatter___date] }\r\n        ) {\r\n          edges {\r\n            node {\r\n              excerpt(pruneLength: 250)\r\n              frontmatter {\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                path\r\n                title\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>{JSON.stringify(data.allPosts.edges)}</>\r\n    )}\r\n  />\r\n)","import React from 'react'\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport rehypeReact from \"rehype-react\"\r\n\r\nexport default ({ slug }) => {\r\n  const renderAst = new rehypeReact({\r\n    createElement: React.createElement,\r\n    components: {\r\n    },\r\n  }).Compiler;\r\n\r\n  return (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPartials: \r\n        allMarkdownRemark(\r\n          filter: { fileAbsolutePath: { regex: \"/content\\/partials/\" } }\r\n        ) {\r\n          edges {\r\n            node {\r\n              htmlAst\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {\r\n          renderAst((data.allPartials.edges.find((item) => item.node.fields.slug === slug)).node.htmlAst)\r\n        }\r\n      </>\r\n    )}\r\n  />\r\n)}","import React from 'react'\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allCategories: allMarkdownRemark(\r\n          limit: 2000\r\n          filter: { fileAbsolutePath: { regex: \"/catalog\\/entries/\" } }\r\n        ) {\r\n          group(field: frontmatter___collection) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const listItems = data.allCategories.group.map(collection => (\r\n        <li key={collection.fieldValue}>\r\n        <Link to={`/collections/${kebabCase(collection.fieldValue)}/`}>\r\n          {collection.fieldValue} ({collection.totalCount})\r\n        </Link>\r\n      </li>\r\n      ))\r\n      return (\r\n      <ul>{listItems}</ul>\r\n    )}}\r\n  />\r\n)","import React from 'react'\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allCategories: allMarkdownRemark(\r\n          limit: 2000\r\n          filter: { fileAbsolutePath: { regex: \"/catalog\\/entries/\" } }\r\n        ) {\r\n          group(field: frontmatter___artist) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const listItems = data.allCategories.group.map(artist => (\r\n        <li key={artist.fieldValue}>\r\n        <Link to={`/artists/${kebabCase(artist.fieldValue)}/`}>\r\n          {artist.fieldValue} ({artist.totalCount})\r\n        </Link>\r\n      </li>\r\n      ))\r\n      return (\r\n      <ul>{listItems}</ul>\r\n    )}}\r\n  />\r\n)","import React from 'react'\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allCategories: allMarkdownRemark(\r\n          limit: 2000\r\n          filter: { fileAbsolutePath: { regex: \"/catalog\\/entries/\" } }\r\n        ) {\r\n          group(field: frontmatter___type) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const listItems = data.allCategories.group.map(type => (\r\n        <li key={type.fieldValue}>\r\n        <Link to={`/types/${kebabCase(type.fieldValue)}/`}>\r\n          {type.fieldValue} ({type.totalCount})\r\n        </Link>\r\n      </li>\r\n      ))\r\n      return (\r\n      <ul>{listItems}</ul>\r\n    )}}\r\n  />\r\n)","import React from 'react'\r\nimport { Link, StaticQuery, graphql } from \"gatsby\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allCategories: allMarkdownRemark(\r\n          limit: 2000\r\n          filter: { fileAbsolutePath: { regex: \"/catalog\\/entries/\" } }\r\n        ) {\r\n          group(field: frontmatter___medium) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const listItems = data.allCategories.group.map(medium => (\r\n        <li key={medium.fieldValue}>\r\n        <Link to={`/media/${kebabCase(medium.fieldValue)}/`}>\r\n          {medium.fieldValue} ({medium.totalCount})\r\n        </Link>\r\n      </li>\r\n      ))\r\n      return (\r\n      <ul>{listItems}</ul>\r\n    )}}\r\n  />\r\n)","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport rehypeReact from \"rehype-react\"\n\nimport Layout from \"../components/layout\"\nimport ListPosts from \"../components/list-posts\"\nimport Partial from \"../components/partial\"\nimport Collections from \"../components/collections\"\nimport Artists from \"../components/artists\"\nimport Types from \"../components/types\"\nimport Media from \"../components/media\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: {\n      \"g-link\": Link,\n      \"ac-list-posts\": ListPosts,\n      \"ac-partial\": Partial,\n      \"ac-collections\": Collections,\n      \"ac-artists\": Artists,\n      \"ac-types\": Types,\n      \"ac-media\": Media,\n    },\n  }).Compiler;\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        {\n          renderAst(post.htmlAst)\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport \"prismjs/themes/prism-okaidia.css\"\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n"],"sourceRoot":""}