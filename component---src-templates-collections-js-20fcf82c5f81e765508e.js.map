{"version":3,"sources":["webpack:///./src/templates/collections.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","default","_ref","pageContext","data","collection","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","collectionHeader","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","map","_ref2","_node$frontmatter","node","frontmatter","path","title","key","gatsby__WEBPACK_IMPORTED_MODULE_1__","Link","to","pageQuery","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","l","204","e","site","siteMetadata","205","t","n","207","r","i","o","u","c","d","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","Fragment","Helmet_default","meta","name","content","paddingTop","_755544856","prop_types_default"],"mappings":"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","file":"component---src-templates-collections-js-20fcf82c5f81e765508e.js","sourcesContent":["import React from \"react\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Collections = ({ pageContext, data }) => {\r\n  const { collection } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const collectionHeader = `${totalCount} ${\r\n    totalCount === 1 ? \"entry\" : \"entries\"\r\n  } in \"${collection}\"`\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>{collectionHeader}</h1>\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const { path, title } = node.frontmatter\r\n          return (\r\n            <li key={path}>\r\n              <Link to={path}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Link to=\"/collections\">All collections</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Collections\r\n\r\nexport const pageQuery = graphql`\r\n  query($collection: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___title], order: ASC }\r\n      filter: { frontmatter: { collection: { in: [$collection] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport \"prismjs/themes/prism-okaidia.css\"\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}