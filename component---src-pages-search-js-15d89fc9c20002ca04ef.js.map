{"version":3,"sources":["webpack:///./src/pages/search.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","StaticQuery","query","render","data","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_appbaseio_reactivesearch__WEBPACK_IMPORTED_MODULE_5__","b","app","credentials","style","display","flexDirection","width","title","dataField","categoryField","componentId","marginBottom","d","e","showSearch","showRadio","react","and","c","from","size","pagination","onData","res","original","replace","edge","allFigures","edges","find","node","frontmatter","figure","id","imageSrc","imageDescription","caption","file","childImageSharp","resize","src","key","idno","className","Link","to","preferred_labels","alt","textAlign","_public_static_d_3559991398_json__WEBPACK_IMPORTED_MODULE_2__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","props","Consumer","staticQueryData","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","204","site","siteMetadata","205","t","207","n","r","i","o","l","s","header","siteTitle","react_default","background","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","Fragment","Helmet_default","meta","name","content","paddingTop","_755544856","prop_types_default","422","434","436"],"mappings":"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","file":"component---src-pages-search-js-15d89fc9c20002ca04ef.js","sourcesContent":["import React from 'react'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport { ReactiveBase, CategorySearch, ReactiveList, SingleList, SelectedFilters } from '@appbaseio/reactivesearch';\r\n\r\nimport Layout from '../components/layout'\r\n\r\nexport default () => (\r\n<StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allFigures:allMarkdownRemark(\r\n          limit: 2000\r\n          filter: { fileAbsolutePath: { regex: \"/catalog\\/entries/\" } }\r\n        ) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                figure {\r\n                  id\r\n                  caption\r\n                  file {\r\n                    childImageSharp {\r\n                      resize(width: 200) {\r\n                        src\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n    render={data => {\r\n      return (\r\n    <Layout>\r\n    <ReactiveBase\r\n    app=\"artcollection\"\r\n    credentials=\"CxtqoVLx0:813ed90c-e2b2-4e36-83a9-ba06b917b2d8\">\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", width: \"40%\" }}>\r\n          <CategorySearch\r\n            title=\"\"\r\n            dataField={['preferred_labels', 'ca_entities.related.keyword']}\r\n            categoryField=\"ca_collections.keyword\"\r\n            componentId=\"search\"\r\n            style={{\r\n              marginBottom: \"15px\"\r\n            }}\r\n          />\r\n          <SelectedFilters />\r\n          <SingleList\r\n            componentId=\"collection\"\r\n            dataField=\"ca_collections.keyword\"\r\n            title=\"Collection\"\r\n            showSearch={false}\r\n            showRadio={false}\r\n            react={{\r\n              and: [\"search\", \"collection\", \"artist\", \"type\", \"medium\"]\r\n            }}          \r\n            style={{\r\n              marginBottom: \"15px\"\r\n            }}\r\n          />\r\n          <SingleList\r\n            componentId=\"artist\"\r\n            dataField=\"ca_entities.related.keyword\"\r\n            title=\"Artist\"\r\n            showSearch={false}\r\n            showRadio={false}\r\n            react={{\r\n              and: [\"search\", \"collection\", \"artist\", \"type\", \"medium\"]\r\n            }}          \r\n            style={{\r\n              marginBottom: \"15px\"\r\n            }}\r\n          />\r\n          <SingleList\r\n            componentId=\"type\"\r\n            dataField=\"type_id.keyword\"\r\n            title=\"Type\"\r\n            showSearch={false}\r\n            showRadio={false}\r\n            react={{\r\n              and: [\"search\", \"collection\", \"artist\", \"type\", \"medium\"]\r\n            }}          \r\n            style={{\r\n              marginBottom: \"15px\"\r\n            }}\r\n          />\r\n          <SingleList\r\n            componentId=\"medium\"\r\n            dataField=\"ca_objects.work_medium.keyword\"\r\n            title=\"Medium\"\r\n            showSearch={false}\r\n            showRadio={false}\r\n            react={{\r\n              and: [\"search\", \"collection\", \"artist\", \"type\", \"medium\"]\r\n            }}          \r\n          />\r\n        </div>\r\n        <ReactiveList\r\n          componentId=\"SearchResult\"\r\n          title=\"Results\"\r\n          dataField=\"preferred_labels\"\r\n          from={0}\r\n          size={6}\r\n          pagination={true}\r\n          react={{\r\n            and: [\"search\", \"collection\", \"artist\", \"type\", \"medium\"]\r\n          }}          \r\n          onData={(res) => {\r\n            const original = res['ca_object_representations.media.original'].replace(/<img src='http:\\/\\/artcollection.calpoly.edu\\/media\\/collectiveaccess\\/images\\/\\d\\/(.+)' width='\\d+' height='\\d+'.*/g,\"$1\")\r\n            const edge = data.allFigures.edges.find(edge => {\r\n              return `${edge.node.frontmatter.figure[0].id}.jpg` === original\r\n            })\r\n            let imageSrc = \"\"\r\n            let imageDescription = \"\"\r\n            if (edge) {\r\n              const figure = edge.node.frontmatter.figure[0]\r\n              imageDescription = figure.caption\r\n              imageSrc = figure.file.childImageSharp.resize.src\r\n            }\r\n            return (\r\n              <div key={res.idno}>\r\n                <div>\r\n                  <dl className=\"dl-horizontal  dl-invert\">\r\n                    <dt className=\"ac-title_display\">Title:</dt>\r\n                    <dd className=\"ac-title_display\"><Link to= {`/catalog/${res.idno}/`}>{res['preferred_labels']}</Link></dd>\r\n                  </dl>\r\n                  <figure>\r\n                    <img src={imageSrc} alt={imageDescription} />\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            )\r\n          }}\r\n          style={{\r\n            width: \"60%\",\r\n            textAlign: \"center\"\r\n          }}\r\n        />\r\n      </div>\r\n    </ReactiveBase>\r\n  </Layout>)}}\r\n  />\r\n)\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport \"prismjs/themes/prism-okaidia.css\"\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}