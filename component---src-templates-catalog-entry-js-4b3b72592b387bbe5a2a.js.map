{"version":3,"sources":["webpack:///./src/components/gallery.js","webpack:///./src/templates/catalog-entry.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["gallery","_ref","listItems","images","map","image","react_default","a","createElement","key","href","file","publicURL","target","rel","src","childImageSharp","resize","alt","caption","entry","data","markdownRemark","renderAst","rehype_react_default","Compiler","layout","id","className","itemScope","itemType","itemProp","frontmatter","title","gatsby_browser_entry","Link","to","lodash_default","kebabCase","artist","year","htmlAst","type","medium","collection","figure","length","query","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","o","204","e","site","siteMetadata","205","t","207","n","r","i","c","l","s","header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","layout_Layout","Fragment","Helmet_default","meta","name","content","paddingTop","_755544856","prop_types_default","node","u"],"mappings":"2KAgBAA,EAdgB,SAAAC,GAAgB,IACxBC,EADwBD,EAAbE,OACQC,IAAI,SAAAC,GAAA,OAC3BC,EAAAC,EAAAC,cAAA,MAAIC,IAAI,cACNH,EAAAC,EAAAC,cAAA,KAAGE,KAAML,EAAMM,KAAKC,UAAWC,OAAO,SAASC,IAAI,uBACnDR,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMM,KAAKK,gBAAgBC,OAAOF,IAAKG,IAAKb,EAAMc,UAC5Db,EAAAC,EAAAC,cAAA,kBAAaH,EAAMc,cAKzB,OAAOb,EAAAC,EAAAC,cAAA,UAAKN,2DCLCD,GAAc,IACrBmB,EADqBnB,EAAXoB,KACGC,eACbC,EAAY,IAAIC,EAAAjB,GACpBC,cAAeF,EAAAC,EAAMC,gBACpBiB,SACH,OACEnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,KACED,EAAAC,EAAAC,cAAA,OACEmB,GAAG,WACHC,UAAU,YACVC,aACAC,SAAS,2BAETxB,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,0BACNrB,EAAAC,EAAAC,cAAA,MAAIuB,SAAS,QAAQX,EAAMY,YAAYC,OACvC3B,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,4BACZtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,oBAAd,UACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,oBAAoBR,EAAMY,YAAYC,OACpD3B,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBAAd,WACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBACZtB,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAA,YAAgBC,EAAA9B,EAAE+B,UAAUlB,EAAMY,YAAYO,QAA9C,KAA2DnB,EAAMY,YAAYO,SAErFjC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBAAd,SACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBAAmBR,EAAMY,YAAYQ,MACnDlC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,0BAAd,gBACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,0BACXL,EAAUH,EAAMqB,UAEnBnC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,iBAAd,SACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,iBACZtB,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAA,UAAcC,EAAA9B,EAAE+B,UAAUlB,EAAMY,YAAYU,MAA5C,KAAuDtB,EAAMY,YAAYU,OAEjFpC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBAAd,WACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,mBACZtB,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAA,UAAcC,EAAA9B,EAAE+B,UAAUlB,EAAMY,YAAYW,QAA5C,KAAyDvB,EAAMY,YAAYW,SAEnFrC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,uBAAd,eACAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,uBACZtB,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAA,gBAAoBC,EAAA9B,EAAE+B,UAAUlB,EAAMY,YAAYY,YAAlD,KAAmExB,EAAMY,YAAYY,aAE7FtC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,wBAAd,oCAGAtB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,wBAAwBR,EAAMY,YAAYL,IACxDrB,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,2BAAd,UAAoF,IAApCR,EAAMY,YAAYa,OAAOC,OAAe,GAAK,IAA7F,KACAxC,EAAAC,EAAAC,cAAA,MAAIoB,UAAU,2BACZtB,EAAAC,EAAAC,cAACR,GAAQG,OAAQiB,EAAMY,YAAYa,mBASpCE,4nBCnDb,IAAMC,EAAqBC,EAAA1C,EAAM2C,kBAE3BC,EAAc,SAAAC,GAAA,OAClBH,EAAA1C,EAAAC,cAACwC,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAM/B,MACLiC,EAAgBF,EAAML,QAAUO,EAAgBF,EAAML,OAAO1B,MAEtD+B,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAM/B,KAAO+B,EAAM/B,KAAKA,KAAOiC,EAAgBF,EAAML,OAAO1B,MAGvD4B,EAAA1C,EAAAC,cAAA,uCAaf,SAASiD,IACP,MAAM,IAAIC,MACR,gVATJP,EAAYQ,WACVtC,KAAMuC,EAAArD,EAAUsD,OAChBd,MAAOa,EAAArD,EAAUuD,OAAOC,WACxBR,OAAQK,EAAArD,EAAUyD,KAClBR,SAAUI,EAAArD,EAAUyD,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAEI,SAAYJ,+FCMzCK,EAAmB,SAAArE,GAAkB,IAAfsE,EAAetE,EAAfsE,SACpBC,EAAgBC,EAAAlE,EAAOmE,wBAAwBH,EAASI,UAC9D,OAAO1B,EAAA1C,EAAMC,cAAcoE,EAAArE,GACzBgE,WACAC,mBAIJF,EAAiBX,WACfY,SAAUX,EAAArD,EAAUsE,OAClBF,SAAUf,EAAArD,EAAUuD,OAAOC,aAC1BA,YAGLe,EAAAT,QAAAU,GAAAC,IAAA,SAAAC,KAAAd,SAAA9C,MAAA6D,MAAAC,cAAAlD,MAAA,iCAAAmD,IAAA,SAAAH,EAAAI,EAAA9E,KAAA+E,IAAA,SAAAL,EAAAI,EAAA9E,GAAA,iBAAAgF,EAAAhF,EAAA,KAAAiF,EAAAjF,EAAA,GAAAkF,EAAAlF,EAAAgF,EAAAC,GAAAE,EAAAnF,EAAA,IAAAoF,EAAApF,EAAAgF,EAAAG,GAAAE,EAAArF,EAAA,KAAAwE,EAAAxE,EAAAgF,EAAAK,GAAA3B,EAAA1D,EAAA,KCYAsF,EA7Be,SAAA5F,GAAA,IAAG6F,EAAH7F,EAAG6F,UAAH,OACbxF,EAAAC,EAAAC,cAAA,OACEuF,OACEC,WAAY,gBACZC,aAAc,YAGhB3F,EAAAC,EAAAC,cAAA,OACEuF,OACEG,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX9F,EAAAC,EAAAC,cAAA,MAAIuF,OAASG,OAAQ,IACnB5F,EAAAC,EAAAC,cAAC0B,EAAAC,MACCC,GAAG,IACH2D,OACEM,MAAO,QACPC,eAAgB,SAGjBR,OChBLS,iBAAS,SAAAtG,GAAA,IAAGuD,EAAHvD,EAAGuD,SAAH,OAAAvD,EAAaoB,KAC1Bf,EAAAC,EAAAC,cAAC0B,EAAAiB,aACCJ,MAAA,YASAQ,OAAQ,SAAAlC,GAAA,OACNf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiG,SAAA,KACElG,EAAAC,EAAAC,cAACiG,EAAAlG,GACC0B,MAAOZ,EAAK6D,KAAKC,aAAalD,MAC9ByE,OACIC,KAAM,cAAeC,QAAS,WAC9BD,KAAM,WAAYC,QAAS,wBAGjCtG,EAAAC,EAAAC,cAACqF,GAAOC,UAAWzE,EAAK6D,KAAKC,aAAalD,QAC1C3B,EAAAC,EAAAC,cAAA,OACEuF,OACEG,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTS,WAAY,IAGbrD,KA5BTnC,KAAAyF,MAmCFP,EAAO5C,WACLH,SAAUuD,EAAAxG,EAAUyG,KAAKjD,YAG3Be,EAAAvE,EAAA0G","file":"component---src-templates-catalog-entry-js-4b3b72592b387bbe5a2a.js","sourcesContent":["import React from 'react'\r\n\r\nconst Gallery = ({ images }) => {\r\n  const listItems = images.map(image => (\r\n    <li key=\"{image.id}\">\r\n      <a href={image.file.publicURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <figure>\r\n        <img src={image.file.childImageSharp.resize.src} alt={image.caption} />\r\n        <figcaption>{image.caption}</figcaption>\r\n      </figure>\r\n      </a>\r\n    </li>\r\n  ))\r\n  return <ul>{listItems}</ul>\r\n}\r\n\r\nexport default Gallery\r\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport rehypeReact from \"rehype-react\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport Gallery from \"../components/gallery\"\n\nexport default ({ data }) => {\n  const entry = data.markdownRemark\n  const renderAst = new rehypeReact({\n    createElement: React.createElement\n  }).Compiler;\n  return (\n    <Layout>\n      <div\n        id=\"document\"\n        className=\"document \"\n        itemScope\n        itemType=\"http://schema.org/Thing\"\n      >\n        <div id=\"{entry.frontmatter.id}\">\n          <h1 itemProp=\"name\">{entry.frontmatter.title}</h1>\n          <dl className=\"dl-horizontal  dl-invert\">\n            <dt className=\"ac-title_display\">Title:</dt>\n            <dd className=\"ac-title_display\">{entry.frontmatter.title}</dd>\n            <dt className=\"ac-artist_facet\">Artist:</dt>\n            <dd className=\"ac-artist_facet\">\n              <Link to={`/artists/${_.kebabCase(entry.frontmatter.artist)}/`}>{entry.frontmatter.artist}</Link>\n            </dd>\n            <dt className=\"ac-date_display\">Date:</dt>\n            <dd className=\"ac-date_display\">{entry.frontmatter.year}</dd>\n            <dt className=\"ac-description_display\">Description:</dt>\n            <dd className=\"ac-description_display\">\n              {renderAst(entry.htmlAst)}\n            </dd>\n            <dt className=\"ac-type_facet\">Type:</dt>\n            <dd className=\"ac-type_facet\">\n              <Link to={`/types/${_.kebabCase(entry.frontmatter.type)}/`}>{entry.frontmatter.type}</Link>\n            </dd>\n            <dt className=\"ac-medium_facet\">Medium:</dt>\n            <dd className=\"ac-medium_facet\">\n              <Link to={`/media/${_.kebabCase(entry.frontmatter.medium)}/`}>{entry.frontmatter.medium}</Link>\n            </dd>\n            <dt className=\"ac-collection_facet\">Collection:</dt>\n            <dd className=\"ac-collection_facet\">\n              <Link to={`/collections/${_.kebabCase(entry.frontmatter.collection)}/`}>{entry.frontmatter.collection}</Link>\n            </dd>\n            <dt className=\"ac-accession_display\">\n              Object Identifier (Accession #):\n            </dt>\n            <dd className=\"ac-accession_display\">{entry.frontmatter.id}</dd>\n            <dt className=\"ac-img_original_display\">Picture{entry.frontmatter.figure.length === 1 ? \"\" : \"s\"}:</dt>\n            <dd className=\"ac-img_original_display\">\n              <Gallery images={entry.frontmatter.figure} />\n            </dd>\n          </dl>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      frontmatter {\n        id\n        title\n        collection\n        artist\n        type\n        medium\n        date\n        figure {\n          id\n          file {\n            publicURL\n            childImageSharp {\n              resize(width: 200) {\n                src\n              }\n            }\n          }\n          caption\n          credit\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport \"prismjs/themes/prism-okaidia.css\"\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}